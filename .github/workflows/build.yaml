name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
        include:
          - os: macos-14
            compiler: clang
          - os: windows-2022
            compiler: msvc-x64
          - os: ubuntu-24.04
            compiler: gcc

    runs-on: ${{ matrix.os }}

    name: Build ${{ matrix.os }} ${{ matrix.compiler }}

    env:
      SQLX_OFFLINE: true
      preset: ${{ matrix.compiler }}-release

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure VS Toolchain (Windows)
        if: matrix.os == 'windows-2022'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Cache dependencies
        uses: swatinem/rust-cache@v2
        with:
          workspaces: rust-postgres -> target

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Config
        run: cmake --preset ${{ env.preset }}
        working-directory: ./rust-postgres

      - name: Build CMake project (C++ and Rust)
        run: cmake --build out/build/${{ env.preset }}
        working-directory: ./rust-postgres

      - name: Build Rust code alone
        run: cargo build --release --locked
        working-directory: ./rust-postgres

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Remove .env file so we don't try connect to the DB
        run: rm -f ./rust-postgres/.env
        shell: bash

      - name: Check DB query metadata
        run: cargo sqlx prepare --check --workspace
        working-directory: ./rust-postgres

      - name: Lint Rust code
        run: cargo clippy --release --locked --no-deps -- -D warnings
        working-directory: ./rust-postgres
        if: github.event_name == 'pull_request' && matrix.os == 'macos-14'
